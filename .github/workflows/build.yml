name: Build Zed Nightly

on:
  schedule:
    - cron: "0 0 * * 4" # Runs at 00:00 UTC every Thursday
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    outputs:
      tag_name: ${{ steps.get-latest-tag.outputs.tag }}

    steps:
      - name: Enable long paths in Git
        run: |
          git config --system core.longpaths true

      - name: Enable long paths in Windows
        shell: powershell
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" `
            -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force

      - name: Fetch latest pre-release tag
        id: get-latest-tag
        shell: powershell
        run: |
          $tags = git ls-remote --tags https://github.com/zed-industries/zed.git
          $preTags = $tags | Select-String 'v\d+\.\d+\.\d+-pre'
          $latestPreTag = $preTags | Sort-Object { [version]($_ -replace '^.*v(\d+\.\d+\.\d+)-pre.*$', '$1') } -Descending | Select-Object -First 1
          $tagName = ($latestPreTag -split '\s+')[-1] -replace 'refs/tags/', ''
          Write-Host "Latest pre-release tag: $tagName"
          echo "tag=$tagName" >> $env:GITHUB_OUTPUT
      
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: zed-industries/zed
          ref: ${{ steps.get-latest-tag.outputs.tag }}

      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: wasm32-wasip1

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: zed-release
          path: target/release/zed.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v4
        with:
          name: zed-release
          path: zed-release

      - name: Zip the release artifact
        run: zip -r zed-windows.zip zed-release/*

      - name: Upload release build artifact to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ needs.build.outputs.tag_name }}
          tag_name: ${{ needs.build.outputs.tag_name }}
          draft: false
          make_latest: true
          files: zed-windows.zip
